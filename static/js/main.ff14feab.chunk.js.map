{"version":3,"sources":["Components/Items/Item/Item.module.css","Components/Items/Description/Description.module.css","Components/Sidebar/Sidebar.module.css","Components/Items/Items.module.css","Components/Header/Header.module.css","Assets/images/kolo.png","Assets/fonts/Gabriela-Regular.ttf","Components/Header/Header.jsx","Components/Items/Item/Item.jsx","Components/Items/Description/Description.jsx","Components/Items/Items.jsx","Redux/items-reducer.jsx","Components/Items/ItemsContainer.jsx","Components/Sidebar/Sidebar.jsx","Redux/sidebar-reducer.jsx","Components/Sidebar/SidebarContainer.jsx","App.js","serviceWorker.js","Redux/redux-store.jsx","index.js"],"names":["module","exports","itemName","item","flexItemsContainer","titleContainer","textContainer","title","sidebar","link","active","startImage","header_logo-spin","header","__webpack_require__","p","Header","props","react_default","a","createElement","className","cls","Item","itemsElements","soul","map","e","react_router_dom","onClick","newSoulPath","path","to","name","Description","descriptionId","pathArray","nameArray","descriptionArray","description","n","length","i","soulPath","history","goBack","Items","items","react_router","exact","render","Items_Item_Item","src","kolo","Items_Description_Description","initialState","oak","id","birchtree","ash","appletree","cherry","rowan","willow","nut","juniper","alder","tree","aspen","start","currentSoulPath","itemsReducer","state","arguments","undefined","action","type","Object","objectSpread2","WithRouterItems","withRouter","ItemsContainer","connect","currentSoul","currentPath","dispatch","newSoulPathAC","Sidebar","sidebarElements","trees","newPath","activeClassName","sidebarReducer","SidebarContainer","pathAC","App","Components_Header_Header","Sidebar_SidebarContainer","Items_ItemsContainer","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff14feab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemName\":\"Item_itemName__PbRCl\",\"item\":\"Item_item__1oEDa\",\"flexItemsContainer\":\"Item_flexItemsContainer__21HWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleContainer\":\"Description_titleContainer__2KA6Y\",\"textContainer\":\"Description_textContainer__ymAcS\",\"title\":\"Description_title__2qQwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3418F\",\"link\":\"Sidebar_link__1ftvh\",\"active\":\"Sidebar_active__W9X9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexItemsContainer\":\"Items_flexItemsContainer__2Uczv\",\"startImage\":\"Items_startImage__3EMj4\",\"header_logo-spin\":\"Items_header_logo-spin__2Ikin\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3BtYW\"};","module.exports = __webpack_public_path__ + \"static/media/kolo.2f127e88.png\";","module.exports = __webpack_public_path__ + \"static/media/Gabriela-Regular.b4856923.ttf\";","import React from 'react';\r\nimport cls from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={cls.header}>\r\n           Соответсвие деревьев и Имен Славянских Божеств\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport cls from './Item.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Item = (props) => {\r\n\r\n    let itemsElements = props.soul\r\n        .map(e => (\r\n            <NavLink onClick={(p) => {\r\n                props.newSoulPath(e.path)\r\n            }} className={cls.item} to={props.path + e.path}>\r\n                <p className={cls.itemName}>{e.name}</p>\r\n            </NavLink>\r\n        ));\r\n\r\n    return (\r\n\r\n        <div className={cls.flexItemsContainer}>\r\n            {itemsElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport cls from './Description.module.css';\r\n\r\n\r\nconst Description = (props) => {\r\n\r\n    let descriptionId;\r\n    let pathArray = props.soul.map(e => (e.path));\r\n    let nameArray = props.soul.map(e => (e.name));\r\n    let descriptionArray = props.soul.map(e => (e.description));\r\n    let n = pathArray.length;\r\n    for (let i = 0; i <= n; i++) {\r\n        if (props.soulPath === pathArray[i]) {\r\n            descriptionId = i\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={cls.titleContainer}>\r\n                <i onClick={() => {\r\n                    props.history.goBack()\r\n                }} className=\"fa fa-2x fa-times\"></i>\r\n                <h2 className={cls.title}>{nameArray[descriptionId]}</h2>\r\n            </div>\r\n            <div className={cls.textContainer}>\r\n                {descriptionArray[descriptionId]}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Description;\r\n","import React from 'react';\r\nimport cls from './Items.module.css';\r\nimport {Route} from 'react-router-dom';\r\nimport Item from './Item/Item';\r\nimport Description from './Description/Description';\r\nimport kolo from '../../Assets/images/kolo.png';\r\n\r\n\r\nconst Items = (props) => {\r\n    return (\r\n\r\n        <div>\r\n            <div className={cls.items}>\r\n                    <Route exact path={props.path} render=\r\n                        {() => <Item path={props.path} soul={props.soul} newSoulPath={props.newSoulPath}/>}/>\r\n\r\n                    <Route exact path={props.path + props.soulPath} render=\r\n                        {() => {\r\n                            if (props.soulPath === '/gods') {\r\n                                return (\r\n                                    <img className={cls.startImage} src={kolo}/>)\r\n                            }\r\n                            else if (props.soulPath === '') {\r\n                                return <div></div>\r\n                            }\r\n                            else {\r\n                                return <Description history={props.history} soul={props.soul}\r\n                                                    soulPath={props.soulPath}/>\r\n                            }\r\n                        }}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Items;\r\n","let initialState = {\r\n    oak: [\r\n        {id: 1, path: \"/rod\", name: \"Род\", description: \"Бог-Создатель, начало начал, всё что было и будет. Прародитель Богов, разделивший Навь и Явь, хранитель тайн рождения мира, носитель вселенской мудрости, создатель законов сосуществования всех видов жизни. Символ космического Разума, Рождения, Прави. \"},\r\n        {id: 2, path: \"/svarog\", name: \"Сварог\", description: \" Небесный Бог Создатель, приемник Рода, прародитель и учитель Богов, небесный кузнец. Бог-Воин, защитник законов Рода и самой Прави. Символ Небесного Отца, свободы, стремления, развития и прогресса. \"},\r\n        {id: 3, path: \"/chislobog\", name: \"Числобог\", description: \"Бог времени и порядка, управляющий сменой, дня и ночи, времен года и эпох, превративший количество в символы и наделивший их особой магией. Символ бесконечности вселенной и непрерывности времени. \"},\r\n        {id: 4, path: \"/svetavid\", name: \"Светавид\", description: \"Бог несущий Свет от Рода миру. Воин, защищающий Правь, воплощение закона и справедливости, покровитель светлых богов и противник темных, дарующий способность видеть суть. Символ знаний, воли и разума. \"},\r\n        {id: 5, path: \"/barma\", name: \"Барма\", description: \"Глас Рода, оглашающий волю Создателя, передающий знания и законы, ведущий к осознанию мира, питающий магию слов, заклинаний и молитв, создатель мотивации и намерения. Вибрация самой вселенной. \"},\r\n        {id: 6, path: \"/ra\", name: \"Ра\", description: \"Бог-Солнце, отделивший Свет от Тьмы, дарующий миру Просветление и Равновесие, изливающий на мир реки божественной Сурьи. Символ небесной благодати. \"},\r\n        {id: 7, path: \"/svetagor\", name: \"Светагор\", description: \" Воин-Великан, охраняющий вход в мир яви и подступы к  Оси Мира, хранитель звёздных знаний, учитель волхвов и воинов. Символ физической силы, несгибаемости и верности. \"},\r\n        {id: 8, path: \"/svyatibor\", name: \"Святибор\", description: \"Бог растительного мира, защитник священных лесов и рощ, покровитель волхвов, целителей и путешественников. Символ почитания Рода и светлых Богов, олицетворение доброты и гостеприимства. \"},\r\n        {id: 9, path: \"/perun\", name: \"Перун\", description: \"Небесный Бог-Громовержец, Бог-Воин, противостоящий силам Тьмы, стоит на страже законов Рода, его карающая рука. Предводитель Небесного Войска, покровитель князей и дружин. Символ побед и ратных подвигов. \"}\r\n    ],\r\n    birchtree: [\r\n        {id: 1, path: \"/zlatamaya\", name: \"Злата Майя\", description: \"Женская ипостась Рода, Прародительница всего сущего, хранительница тайн рождения мира, носительница вселенской мудрости. Символ вселенской Любви и Материнства. \"},\r\n        {id: 2, path: \"/lada\", name: \"Лада\", description: \"Богиня любви, брака и семьи, передавшая людям свод семейных законов и правил, покровительница родовых, племенных и семейных связей. Символ мира и любви. \"},\r\n        {id: 3, path: \"/zemun\", name: \"Земун\", description: \" Священная небесная корова, роженица и кормилица светлых богов. Символ плодородия и материнства. \"},\r\n        {id: 4, path: \"/sedun'\", name: \"Седунь\", description: \"Небесная коза, роженица и кормилица тёмных богов, дающая тень. Символ скрытого и тайного. \"},\r\n        {id: 5, path: \"/divadodola\", name: \"Дива Додола\", description: \" Богиня молний грозы и дождя, богиня вскармливания грудных детей, защитница любого начинания. Символ неразлучности, поощрения и справедливого возмездия. \"},\r\n        {id: 6, path: \"/tara\", name: \"Тара\", description: \"Богиня милосердия и высшей любви, хранительница лесов, покровительница живой природы. Символ прощения и заступничества. \"},\r\n        {id: 7, path: \"/makosh\", name: \"Макошь\", description: \"Богиня судеб, мать нитей судьбы, хранительница тайн Рода и клятв, хозяйка перекрёстков. Символ хитросплетений дорог, связей и предназначений. \"},\r\n        {id: 8, path: \"/zarya\", name: \"Заря\", description: \" Богиня рассвета, утренней зари, здоровья, очищения, покровительница урожая. Символ обретения.\\n\"},\r\n        {id: 9, path: \"/noch\", name: \"Ночь\", description: \"Богиня ночи, кладов, тайн, защитница скрывающихся от преследований, хозяйка сновидений и покровительница ворожей. \"}\r\n    ],\r\n    ash: [\r\n        {id: 1, path: \"/veles\", name: \"Велес\", description: \"Бог животного мира, хранитель и даритель знаний, охраняет вход в Навь, покровитель волхвов, торговли, скотоводства, охотников и целителей. Бог приводящий в движение мир. \"},\r\n        {id: 2, path: \"/semargl\", name: \"Семаргл\", description: \"Бог огня, домашнего очага, огненных жертвоприношений и погребального костра воинов, хранитель посевов. \"},\r\n        {id: 3, path: \"/stribog'\", name: \"Стрибог\", description: \"Бог ветра, вдыхающий жизнь, управляющий погодой, покровитель перемен. Символ намерений и стремлений  идти  путем  Прави.\"},\r\n        {id: 4, path: \"/hors\", name: \"Хорс\", description: \"Бог солнца, воин света, несущий знания, покровитель соколов. Символ побеждающего всякую тьму (в том числе невежество). \"},\r\n        {id: 5, path: \"/yarilo\", name: \"Ярило\", description: \"Бог весеннего солнца, плодородия и плодовитости, возрождения, молодости, ярости и страсти, воинского искусства, покровитель ратников и их оружия. \"},\r\n        {id: 6, path: \"/volh\", name: \"Волх\", description: \"Воин-оборотень, Бог бесстрашия, самоотречения, покровитель дружины, учитель берсерков, создатель воинской тактики,  защитник славян. \"},\r\n        {id: 7, path: \"/kitovras\", name: \"Китоврас\", description: \"Бог мудрости и смелости, хранитель знаний, небесный страж, противник сил тьмы. Символ защиты от тёмных сил во всех их проявлениях. \"},\r\n        {id: 8, path: \"/dajbog\", name: \"Дажбог\", description: \"Бог солнца и солнечного света, противостоящий силам Тьмы, даритель земных благ, урожая и жизненной силы, защитник всего живого. Символ божественной любви, справедливости и самой жизни. \"},\r\n        {id: 9, path: \"/kolyada\", name: \"Коляда\", description: \"Бог зимнего солнца, хранитель звёздных знаний, покровитель земледельцев, воинов и жрецов. Символ рождения и очищающего огня.\\n\"}\r\n    ],\r\n    appletree: [\r\n        {id: 1, path: \"/zemlya\", name: \"Сыра Земля\", description: \"Великая Мать, Богиня земного плодородия и богатого урожая. Символ силы, нежности, заботы, наставлений на истинный путь. \"},\r\n        {id: 2, path: \"/vyrgon'\", name: \"Выргонь\", description: \"Богиня слепой неудержимой страсти и пламени желаний для всего живого в Нави и Яви. Символ продолжения Рода и  пламени любви. \"},\r\n        {id: 3, path: \"/utochka\", name: \"Уточка\", description: \"Богиня сотворения мира, Богов и Демонов. Символ рождения мира. \"},\r\n        {id: 4, path: \"/danu\", name: \"Дану\", description: \"Богиня воды, дарующая жизнь всему живому. Символ процветания. \"},\r\n        {id: 5, path: \"/amelfa\", name: \"Амелфа\", description: \"Небесная богиня туч и облаков. Символ доброты и сострадания. \"},\r\n        {id: 6, path: \"/pleyana\", name: \"Плеяна\", description: \"Богиня Радуги, хранительница кладов. Символ богатства, здоровья и большой семьи.\"},\r\n        {id: 7, path: \"/kvasur\", name: \"Квасур\", description: \"Бог свадеб и пиршеств, покровитель виноделов. Символ почетания предков и семейного очага.\"},\r\n        {id: 8, path: \"/kama\", name: \"Кама\", description: \"Бог любви, покровитель супружеской жизни, управляет чувствами и эмоциями. Символ счастья. \"},\r\n        {id: 9, path: \"/vavila\", name: \"Вавила\", description: \"Бог веселья и хмеля, покровитель скоморохов, музыкантов и сказителей. Символ радости, смеха и игрищ.\\n\"}\r\n    ],\r\n    cherry: [\r\n        {id: 1, path: \"/kryshen'\", name: \"Крышень\", description: \"Небесный Бог звёзд, управляет совершением обрядов, ритуалов, проведением праздников, покровитель Небесной мудрости. \"},\r\n        {id: 2, path: \"/siva\", name: \"Сива\", description: \"Бог плодородия, следит за исполнением обрядов и жертвоприношений. Символ божьего наказания и кары небесной для сошедших с пути Прави\"},\r\n        {id: 3, path: \"/ilm\", name: \"Ильм\", description: \"Бог озёрный и морской, управляет дождевыми облаками и туманами над водой покровитель моряков. Символ отражения Небес на земле.\"},\r\n        {id: 4, path: \"/kupala\", name: \"Купала\", description: \"Бог летнего солнца, росы и плодородия. Символ связи воды и огня, запретной любви и ворожбы.\"},\r\n        {id: 5, path: \"/kapel'\", name: \"Капель\", description: \"Весенний Бог дождя, радости, восхищения и созерцания. Символ начала, пробуждения и очищения.\"},\r\n        {id: 6, path: \"/denizza\", name: \"Денница\", description: \"Бог утренней зари, карающая ипостась Рода. Символ противостояния Света Тьме. \"},\r\n        {id: 7, path: \"/bogumir\", name: \"Богумир\", description: \"Прародитель ряда славянских племён, примиряющий враждующих, несущий мир, передавший мудрость Сварога и Лады волхвам и простому народу\"},\r\n        {id: 8, path: \"/ariy\", name: \"Арий\", description: \"Прародитель многих племён славян, Бог-Воин, предводитель исхода Ариев из Гипербореи, создатель боевой колесницы и орудий для земледелия.\"},\r\n        {id: 9, path: \"/radogost\", name: \"Радогост\", description: \"Бог-Воин, прародитель северных племён славян. Символ  плодородия, гостеприимства, ратных подвигов и отваги, может повлиять на судьбу человека.\"}\r\n    ],\r\n    rowan: [\r\n        {id: 1, path: \"/kostroma\", name: \"Кострома\", description: \"Богиня плодородия, покровительница влюблённых. Символ очищения и возрождения. \"},\r\n        {id: 2, path: \"/rada\", name: \"Рада\", description: \"Богиня процветания, дающая свет, радость и удовлетворение. Символ духовного роста. \"},\r\n        {id: 3, path: \"/radunizza'\", name: \"Радуница\", description: \"Богиня солнечных лучей, живущая в отражении солнца на воде, сопровождает умерших в мир Нави. Символ непрерывности жизни, превращения и возрождения. \"},\r\n        {id: 4, path: \"/devana\", name: \"Девана\", description: \"Богиня охоты, покровительница  животных, приносит удачу в охоте, но строго следит за разумной мерой. Символ соблюдения законов леса.\"},\r\n        {id: 5, path: \"/maya\", name: \"Майя\", description: \"Богиня небесного света, защитница женщин и детей, несущая знания и справедливость, покровительница волхвов.\"},\r\n        {id: 6, path: \"/alya\", name: \"Аля\", description: \"Богиня небесного огня, покровительница природных стихийных духов. Символ непредсказуемости, неукротимости. \"},\r\n        {id: 7, path: \"/taya\", name: \"Тайя\", description: \"Богиня весеннего неба, таяния снегов, дарительница целебных растений, покровительница лекарей. Символ роста и плодородия. \"},\r\n        {id: 8, path: \"/elya\", name: \"Эля\", description: \"Богиня грозового неба, покровительница женщинвоительниц. Символ разрушения всего костного и застарелого.\"},\r\n        {id: 9, path: \"/lina\", name: \"Лина\", description: \"Богиня небесных вод, мать берегиньрусалок и водяных, покровительница земледельцев. Символ плодородия и заступничества. \"}\r\n    ],\r\n    willow: [\r\n        {id: 1, path: \"/jiva\", name: \"Жива\", description: \"Богиня жизни, покровительница всего живого. Символ жизненной силы, здоровья, долголетия, противостояния Смерти. \"},\r\n        {id: 2, path: \"/lelya\", name: \"Леля\", description: \"Богиня весны, покровительница всех влюблённых. Символ юности, жизнелюбия и возвышенных стремлений, весны как начала начал\"},\r\n        {id: 3, path: \"/polelya'\", name: \"Полеля\", description: \"Богиня брака, защитница семейного очага, дарительница житейской мудрости, покровительница рукодельниц. \"},\r\n        {id: 4, path: \"/didilya\", name: \"Дидилия\", description: \"Богиня материнства, покровительница повитух, защитница новорожденных. Символ смены поколений и преемственности. \"},\r\n        {id: 5, path: \"/dolya\", name: \"Доля\", description: \"Помощница Богини судеб. Символ хорошей судьбы,  избытка всего, гладкого пути и сопутствующего света\"},\r\n        {id: 6, path: \"/nedolya\", name: \"Недоля\", description: \"Помощница Богини судеб. Символ плохой судьбы, ограничений, ухабистой дороги, пребывания во мраке. \"},\r\n        {id: 7, path: \"/merya\", name: \"Меря\", description: \"Богиня поднебесной (нижнего неба), тумана, покровительница ремесленников. Символ связи Земли и Неба, Богов и людей. \"},\r\n        {id: 8, path: \"/bereginya\", name: \"Берегиня\", description: \"Божество плодородия и влаги, защитница всего живого от духов Тьмы. Символ добрых сил природы, ворожбы, предсказаний и мудрых советов. \"},\r\n        {id: 9, path: \"/vodyanoy\", name: \"Водяной\", description: \"Хозяин водных источников, (ручьев, рек, озер, болот, колодцев и т.д.). Символ разумного обращения с водными ресурсами. Выполняет волю Лины, Дона и Перуна. \"}\r\n    ],\r\n    nut: [\r\n        {id: 1, path: \"/did\", name: \"Дид\", description: \"Бог семейного очага, хранитель семейных законов и правил (домостроя). Символ семейного счастья и продолжения человеческого рода. \"},\r\n        {id: 2, path: \"/orel\", name: \"Орел\", description: \"Вестник Перуна, предупреждает о скором начале войны, является защитником народа и князей. Символ свободы, братства, победы над тьмой, знак величия духа. \"},\r\n        {id: 3, path: \"/voron'\", name: \"Ворон\", description: \"Вестник Чёрного Змея, вещает волю царя Подземного мира, предупреждает людей об опасности, беде и смерти. Символ вездесущности тёмных сил. \"},\r\n        {id: 4, path: \"/stratim\", name: \"Стратим\", description: \"Вестник Стрибога, является в образе лебедя, управляет погодой на море. Символ бурь и штормов, приходит на помощь к чтящим законы Прави. \"},\r\n        {id: 5, path: \"/sirin\", name: \"Сирин\", description: \"Вестник Кащея, темная птица, от головы до пояса - женщина, от пояса - птица. Символ печали и равнодушия, хранительница тайн и желаний. \"},\r\n        {id: 6, path: \"/rarog\", name: \"Рарог\", description: \"Вестник Семаргла, огненный сокол, превращающийся в дракона или огненный вихрь, защитник домашнего очага, стоящий на страже законов Рода. Символ наказания Зла и противостояния Тьме. \"},\r\n        {id: 7, path: \"/alkonost\", name: \"Алконост\", description: \"Вестник Хорса и Крышня, полуптица- получеловек (тело птицы, голова и руки человека, на голове венок), управляет ветрами и погодой, отвлекает от смертельной тоски и боли. \"},\r\n        {id: 8, path: \"/finist\", name: \"Финист\", description: \"Вестник Волха, поднимает боевой дух и отгоняет страх на поле боя, призывает победу. Символ духовной силы и возрождения. \"},\r\n        {id: 9, path: \"/gamayun\", name: \"Гамаюн\", description: \"Вестник Велеса, Коляды или Дажбога, с головы по пояс - человек, от пояса птица, передаёт волю богов, предсказывает судьбу, знает многие тайны и охотно ими делится. Символ мудрости и передачи сакральных знаний.\"}\r\n    ],\r\n    juniper: [\r\n        {id: 1, path: \"/domovoy\", name: \"Домовой\", description: \"Хозяин дома. Сфера влияния - жилище человека и его обитатели. Символ житейской мудрости, порядка, защищённости и счастья. Выполняет волю Дида и Лады.\"},\r\n        {id: 2, path: \"/dvorovoy\", name: \"Дворовой\", description: \"Хозяин двора. Сфера влияния -  двор, баня, хозяйственные постройки, домашняя утварь, скот и птица. Символ защиты благополучия и достатка. Выполняет волю Дида, Сварога И  Велеса. \"},\r\n        {id: 3, path: \"/lugovoy'\", name: \"Луговой\", description: \"Хозяин лугов. Сфера влияния - луга, звери, птицы, пасущийся скот, пастухи. Символ защиты от стихии. Выполняет волю Земун, Велеса и Стрибога. \"},\r\n        {id: 4, path: \"/polevik\", name: \"Полевик\", description: \"Хозяин полей. Сфера влияния -  поля, земледельцы и их орудия. Символ защиты от стихии, воровства и вредительства. Выполняет волю Матери Сырой Земли, Сивы и Ярилы. \"},\r\n        {id: 5, path: \"/leshiy\", name: \"Леший\", description: \"Хозяин лесов. Сфера влияния - лес и  его обитатели. Символ разумного обращения с лесом. Выполняет волю Велеса, Святибора, Тары и Деваны. \"},\r\n        {id: 6, path: \"/vedogon\", name: \"Ведогон\", description: \"Душа человека (стриг), рождена в мире Нави, присоединена к сердцу человека невидимой нитью, смерть ведёт к разрыву нити, разрыв нити к смерти. \"},\r\n        {id: 7, path: \"/shulikun\", name: \"Шуликун\", description: \"Стихийный дух. Сфера влияния - стихии воды и огня. Символ лесного пожара, потопа. Выполняет роль карающей воли Перуна и Жижаля. \"},\r\n        {id: 8, path: \"/curdush\", name: \"Курдуши\", description: \"Тёмный дух или демон одиночка, на службе у Ведуна. Выполняет волю Пераскеи и Скипер Змея. \"},\r\n        {id: 9, path: \"/cicimora\", name: \"Кикимора\", description: \"Сфера влияния -  ночные кошмары. Символ болезни и несчастья. Выполняет волю Марены и Вия. \"}\r\n    ],\r\n    alder: [\r\n        {id: 1, path: \"/usha\", name: \"Юша Змей\", description: \"Змей держащий на себе землю. Символ бесконечности и связи времён, изменчивости, гибкости, изворотливости и выносливости. \"},\r\n        {id: 2, path: \"/diy\", name: \"Дый\", description: \"Бог ночного неба и материального мира. Символ благополучия, удачи и долголетия. \"},\r\n        {id: 3, path: \"/volynya'\", name: \"Волыня\", description: \"Владычица Океана, защитница морских обитателей, покровительница морских путешественников и первооткрывателей. Символ свободы, раздолья,  необъятного и непостежимого. \"},\r\n        {id: 4, path: \"/jijal\", name: \"Жыжаль\", description: \"Бог подземного огня, кузнец, оружейных дел мастер. Соперник Сварога и Семаргла, хозяин горячих источников. Символ подземного тепла, летнего зноя, засухи и пожаров. \"},\r\n        {id: 5, path: \"/indra\", name: \"Индра\", description: \"Бог-Воин, Царь Подземного мира. Символ мощи, храбрости, стойкости и непокорности. \"},\r\n        {id: 6, path: \"/chur\", name: \"Чур\", description: \"Бог всех границ (от границ личного пространства до границ Яви и Нави). Символ мужской силы и страсти. \"},\r\n        {id: 7, path: \"/don\", name: \"Дон\", description: \"Бог-Царь Подводного мира, податель земных благ. Символ мудрости, покровительства и благополучия. \"},\r\n        {id: 8, path: \"/laymiya\", name: \"Лаймия\", description: \"Богиня военных походов, защитница веры, следит за должным исполнением обрядов. Символ служения и самопожертвования.\"},\r\n        {id: 9, path: \"/diviya\", name: \"Дивия\", description: \"Богиня луны, светлой ночи, приливов и отливов, Воительница отделившая ночь от Тьмы, покровительница всего изменчивого, магии и ворожбы. Символ Луча Света во Тьме. \"}\r\n    ],\r\n    tree: [\r\n        {id: 1, path: \"/jelya\", name: \"Желя\", description: \"Богиня похоронного обряда, смертной тоски, скорби и жалости, провожающая на погребальном костре. \"},\r\n        {id: 2, path: \"/karna\", name: \"Карна\", description: \"Богиня печали, плакальщица, первая оплакивающая умершего, вестница мертвых. \"},\r\n        {id: 3, path: \"/kashchey'\", name: \"Кащей\", description: \"Хозяин Тёмного царства и Пекла, олицетворение морозной зимы, снега и льда, засушливого лета, стихийных пожаров и пепла. Символ бессмертия и превращений.\"},\r\n        {id: 4, path: \"/yaga\", name: \"Ася Яга\", description: \"Богиня звёздного неба, превратившаяся в Богиню смерти, живущую между Явью и Навью, и охраняющую вход в мир Яви. Символ перехода одного мира в другой. \"},\r\n        {id: 5, path: \"/goregor\", name: \"ГореГор\", description: \"Вестник подземного мира, предводитель тёмного войска, следит за жертвоприношениями Чернобогу. Символ противостояния Свету. \"},\r\n        {id: 6, path: \"/gorynya\", name: \"Горыня\", description: \"Горный Великан, охраняющий вход в Тёмное царство, олицетворение беды и горя. Символ одиночиства, равнодушия, злобы и человеконенавистничества. \"},\r\n        {id: 7, path: \"/dubynya\", name: \"Дубыня\", description: \"Лесной Великан, охраняющий вход в Пекло, покровитель злых стихийных духов, олицетворение болезни, порчи, сглаза и проклятия. Символ увядания и забытья. \"},\r\n        {id: 8, path: \"/usynya\", name: \"Усыня\", description: \"Речной Великан, охраняющий вход в мир Нави, покровитель тёмных жрецов, олицетворяет неудачи, препятствия на пути. Символ потерь и измен. \"},\r\n        {id: 9, path: \"/kriksy\", name: \"Криксы\", description: \"Ночные демоны, служители Кривды, олицетворение обмана, оговора, клятвопреступления, предательства, страха, боли и смерти. \"}\r\n    ],\r\n    aspen: [\r\n        {id: 1, path: \"/black\", name: \"Черный Змей\", description: \"Первый Чернобог, воплощение всех тёмных сил, Тьмы, как Силы притяжения любого духа, создающей препятствия на пути к Свету. Символ противостояния Роду, Тьмы, Пустоты и Небытия. \"},\r\n        {id: 2, path: \"/marena\", name: \"Марена\", description: \"Богиня холода и очищения, увядания, болезней, забытья и смерти. Символ перехода Яви в Навь. \"},\r\n        {id: 3, path: \"/skiper'\", name: \"Скипер Змей\", description: \"Царь Тёмного царства. Символ коварства, лжи, лицимерия, обольщения и стремления обернуть всех к Тьме. \"},\r\n        {id: 4, path: \"/bosorkun\", name: \"Босоркун\", description: \"Вестник ГореГора и Чернобога (чёрный аист), управляет погодой в горах, насылает засуху и пожары. Символ неудержимости стихии, борьбы Тьмы и Света. \"},\r\n        {id: 5, path: \"/viy\", name: \"Вий\", description: \"Царь подземного мира, хранитель тёмных знаний, наблюдает за каждым с  рождения до смерти. Символ справедливого воздаяния, стихийных бедствий и эпидемий. \"},\r\n        {id: 6, path: \"/hala\", name: \"Хала Змей\", description: \"Змей, служитель Чернобога, питающийся страхом и страданиями, ожесточает сердца, забирая способность сострадать. Символ разрушения, голода и хаоса. \"},\r\n        {id: 7, path: \"/krivda\", name: \"Кривда\", description: \"Воплощение тёмных Сил, противостоящих Законам Прави, создающая губительные иллюзии, прячущие Истину. \"},\r\n        {id: 8, path: \"/yama\", name: \"Яма\", description: \"Бог гниения и тления, перехода от Жизни к Смерти. Символ освобождения и перерождения. \"},\r\n        {id: 9, path: \"/peraskeya\", name: \"Пераскея\", description: \" Царица Подземного царства. Символ мудрости, предвидения, интуиции, обольщения, тщеславия и стремления к власти. \"}\r\n    ],\r\n    start:[{ name: '12 Деревьев 108 Имен', path:'/gods', description:\"njfgfgh\" }],\r\n    currentSoulPath:''\r\n\r\n};\r\n\r\nexport const newSoulPathAC = (path) => ({type: 'NEW_SOUL_PATH', newSoulPath: path});\r\n\r\n\r\nconst itemsReducer = (state = initialState,action) => {\r\n\r\n    if (action.type === 'NEW_SOUL_PATH') {\r\n        return {\r\n            ...state, currentSoulPath: action.newSoulPath\r\n        }\r\n    } else {\r\n        return {...state}\r\n    }\r\n};\r\n\r\nexport default itemsReducer;","import Items from './Items';\r\nimport {connect} from \"react-redux\";\r\nimport {newSoulPathAC} from \"../../Redux/items-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n        let currentSoul;\r\n        let path = state.sidebar.currentPath;\r\n        let soulPath = state.items.currentSoulPath;\r\n\r\n         switch (path) {\r\n            case '/oak':\r\n                currentSoul = state.items.oak;\r\n                break;\r\n            case '/ash':\r\n                currentSoul = state.items.ash;\r\n                break;\r\n            case '/alder':\r\n                currentSoul = state.items.alder;\r\n                break;\r\n             case '/appletree':\r\n                 currentSoul = state.items.appletree;\r\n                 break;\r\n             case '/aspen':\r\n                 currentSoul = state.items.aspen;\r\n                 break;\r\n             case '/cherry':\r\n                 currentSoul = state.items.cherry;\r\n                 break;\r\n             case '/birchtree':\r\n                 currentSoul = state.items.birchtree;\r\n                 break;\r\n             case '/juniper':\r\n                 currentSoul = state.items.juniper;\r\n                 break;\r\n             case '/nut':\r\n                 currentSoul = state.items.nut;\r\n                 break;\r\n             case '/rowan':\r\n                 currentSoul = state.items.rowan;\r\n                 break;\r\n             case '/tree':\r\n                 currentSoul = state.items.tree;\r\n                 break;\r\n             case '/willow':\r\n                 currentSoul = state.items.willow;\r\n                 break;\r\n             default: currentSoul = state.items.start ;\r\n        }\r\n        return {\r\n            soul: currentSoul,\r\n            soulPath: soulPath,\r\n            path: path\r\n        }\r\n    };\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        newSoulPath: (path) => {\r\n\r\n            dispatch(newSoulPathAC(path));\r\n        }\r\n    }\r\n};\r\n\r\nlet WithRouterItems = withRouter(Items)\r\n\r\nconst ItemsContainer = connect(mapStateToProps, mapDispatchToProps)(WithRouterItems);\r\n\r\nexport default ItemsContainer;\r\n","import React from 'react';\r\nimport cls from './Sidebar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = (props) => {\r\n\r\n\r\n    let sidebarElements = props.trees\r\n        .map(e => (<NavLink onClick={(p)=>{props.newPath(e.path)}}\r\n                            className={cls.link} to={e.path}\r\n                            activeClassName={ cls.active}>\r\n            {e.name}\r\n        </NavLink>));\r\n    return (\r\n        <div className={cls.sidebar}>\r\n            {sidebarElements}\r\n        </div>\r\n    )\r\n};\r\nexport default Sidebar;","let initialState = {\r\n    trees: [\r\n        {id: 1, path: \"/oak\", name: \"Дуб\"},\r\n        {id: 2, path: \"/birchtree\", name: \"Береза\"},\r\n        {id: 3, path: \"/ash\", name: \"Ясень\"},\r\n        {id: 4, path: \"/appletree\", name: \"Яблоня\"},\r\n        {id: 5, path: \"/cherry\", name: \"Вишня\"},\r\n        {id: 6, path: \"/rowan\", name: \"Рябина\"},\r\n        {id: 7, path: \"/willow\", name: \"Ива\"},\r\n        {id: 8, path: \"/nut\", name: \"Орех\"},\r\n        {id: 9, path: \"/juniper\", name: \"Можже-вельник\"},\r\n        {id: 10, path: \"/alder\", name: \"Ольха\"},\r\n        {id: 11, path: \"/tree\", name: \"Ель\"},\r\n        {id: 12, path: \"/aspen\", name: \"Осина\"}],\r\n    currentPath: ''\r\n\r\n};\r\n\r\nexport const pathAC = (path) => ({type: 'NEW_PATH', newPath: path});\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    if (action.type === 'NEW_PATH') {\r\n        return {\r\n            ...state, currentPath: action.newPath\r\n    }\r\n    } else {\r\n        return {...state}\r\n    }\r\n};\r\n\r\n\r\nexport default sidebarReducer;","import Sidebar from './Sidebar';\r\nimport {connect} from 'react-redux';\r\nimport {pathAC} from './../../Redux/sidebar-reducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        trees: state.sidebar.trees\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        newPath: (path) => {\r\n\r\n            dispatch( pathAC(path) );\r\n        }\r\n}\r\n};\r\n\r\nconst SidebarContainer = connect(mapStateToProps,mapDispatchToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport ItemsContainer from './Components/Items/ItemsContainer';\nimport SidebarContainer from './Components/Sidebar/SidebarContainer';\n\n\nfunction App(props) {\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className=\"flexContainer\">\n                <div className=\"sidebar\">\n                    <SidebarContainer/>\n                </div>\n                <div className=\"mainContainer\">\n                    <ItemsContainer/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport itemsReducer from \"./items-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n\r\n    sidebar:sidebarReducer,\r\n    items:itemsReducer\r\n\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport store from './Redux/redux-store';\nimport './Assets/fonts/Gabriela-Regular.ttf';\n\nReactDOM.render(\n\n    <BrowserRouter  >\n        <Provider store={store}>\n    <App />\n        </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}